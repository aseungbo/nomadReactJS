{"version":3,"sources":["components/Movie.js","routes/Home.js","routes/Detail.js","App.js","index.js"],"names":["Movie","_ref","id","coverImg","title","summary","genres","react_default","a","createElement","src","alt","react_router_dom","to","concat","map","g","key","Home","_useState","useState","_useState2","Object","slicedToArray","loading","setLoading","_useState3","_useState4","movies","setMovies","getMovies","asyncToGenerator","_regeneratorRuntime","mark","_callee","json","wrap","_context","prev","next","fetch","sent","data","stop","apply","this","arguments","useEffect","movie","components_Movie","medium_cover_image","Detail","useParams","getDetail","Detail_regeneratorRuntime","console","log","App","react_router","path","element","routes_Detail","routes_Home","ReactDOM","createRoot","document","getElementById","render","src_App"],"mappings":"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","file":"static/js/main.73c42777.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\nimport {Link} from \"react-router-dom\";\nimport React from 'react';\n\nfunction Movie ({ id, coverImg, title, summary, genres }) {\n    return (\n        <div>\n            <img src={coverImg} alt={title}/>\n            <h2>\n                <Link to={`/movie/${id}`}>{title}</Link>\n            </h2>\n            <p> {summary} </p>\n            <ul>\n                {genres.map((g) => (\n                    <li key={g}> {g} </li>\n                ))}\n            </ul>\n        </div>\n    );\n}\n\nMovie.propTypes = {\n    id: PropTypes.number.isRequired,\n    coverImg: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    summary: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired,\n}\n\nexport default Movie;","import { useState, useEffect } from \"react\";\nimport Movie from \"../components/Movie\";\nimport React from 'react';\n\nfunction Home() {\n    const [loading, setLoading] = useState(true);\n    const [movies, setMovies] = useState([]);\n    // 기존에 사용하던 fetch를 async-await를 사용해 구현해보자.\n    const getMovies = async () => {\n        const json = await (\n        await fetch(`https://yts.mx/api/v2/list_movies.json?minimum_rating=8.8&sort_by=year`)\n        ).json();\n        setMovies(json.data.movies);\n        setLoading(false);\n    }\n    useEffect(() => {\n        getMovies();\n    }, []);\n    return (\n        <div>\n        <h1> Movies </h1>\n        <hr />\n        {loading ? (\n            <strong>Loading...</strong>\n            ) : (\n            <div>\n                {movies.map((movie) => (\n                <Movie\n                    key={movie.id}\n                    id={movie.id}\n                    coverImg={movie.medium_cover_image} \n                    title={movie.title}\n                    summary={movie.summary}\n                    genres={movie.genres}\n                />\n                ))}\n            </div>\n            )\n        }\n        </div>\n    );\n}\n\nexport default Home;","import { useEffect } from \"react\";\nimport {useParams} from \"react-router-dom\";\nimport React from 'react';\n\nfunction Detail() {\n    const { id } = useParams();\n    const getDetail = async () => {\n        const json = await(\n            await fetch(`https://yts.mx/api/v2/movie_details.json?movie_id=${id}`)\n        ).json();\n        console.log(id);\n        console.log(json);\n    }\n    useEffect(() => {\n        getDetail();\n    }, [])\n    return (\n        <h1> Details </h1>\n    );  \n}\n\nexport default Detail;","import {\n  BrowserRouter,\n  Routes,\n  Route,\n} from \"react-router-dom\";\nimport Home from \"./routes/Home\";\nimport Detail from \"./routes/Detail\";\nimport React from 'react';\n\nfunction App() {\n  return (\n\n<BrowserRouter>\n      <Routes>\n        <Route path=\"/movie/:id\" element={<Detail />}/>\n        <Route path=\"/\" element={<Home />}/>\n      </Routes>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n    <App />\n);\n"],"sourceRoot":""}